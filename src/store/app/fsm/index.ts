/** **************************************************************************
 * THIS FILE IS AUTO-GENERATED BY plop
 * Do not manually change
 ** ************************************************************************ */

const debug = require("debug")("fsm:controller");
import * as _ from 'lodash';

import { combineReducers } from "redux";
import * as StateMachine from "@taoqf/javascript-state-machine";
import { fsmCreateReducer, fsmOptions, fsmTransitionSagas, StateMachineState, initialStateMachineState } from "./fsmDefinitions";

import { fsmClosedStateReducer, ClosedStateState, initialClosedStateState, ClosedStateSagas } from "./states/ClosedState";
import { fsmOpenedStateReducer, OpenedStateState, initialOpenedStateState, OpenedStateSagas } from "./states/OpenedState";

export * from "./fsmDefinitions";

export let fsmSagas: Function[] = _.concat(fsmTransitionSagas, 
    ClosedStateSagas,
    OpenedStateSagas
);

export interface FsmState {
    fsm: StateMachineState
    ClosedState: ClosedStateState
    OpenedState: OpenedStateState
}

export let initialFsmState: FsmState = {
    fsm: initialStateMachineState,
    ClosedState: initialClosedStateState,
    OpenedState: initialOpenedStateState
};

export let fsmStateReducer = combineReducers<FsmState | undefined>({
    fsm: fsmCreateReducer,
    ClosedState: fsmClosedStateReducer,
    OpenedState: fsmOpenedStateReducer
});